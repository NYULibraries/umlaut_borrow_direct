<% bd_presenter = BorrowDirectPresenter.new(renderer) %>

<% if bd_presenter.show_request_form? %>
    <%= render "borrow_direct/request_form", :response => bd_presenter.request_prompt_response %>
<% end %>

<% if bd_presenter.show_link_response?  %>
    <%# display it the normal way with a standard response type %>
    <ul>
        <%= render renderer.item_render_hash(bd_presenter.link_response) %>
    </ul>
<% end %>

<% if bd_presenter.show_not_available?  %>
    <%# display custom because we have no URL, and the standard thing insists on a link %>
    <p class="umlaut-unavailable"><%= bd_presenter.not_available_response.view_data["display_text"] %></p>
<% end %>

<%# we do custom spinner, so we can customize label for 'placing request' %>
<% if bd_presenter.service_in_progress?   %>
    <%= render bd_presenter.spinner_render_hash %>
<% end %>

<%# do we have an error in the DispatchedService? If so,
    display a warning at bottom of the section no matter what.
    Do we have a bd_request_status with an error? Display it too. %>

<% 
errors = umlaut_request.
    dispatch_objects_with(:service_type_values => UmlautBorrowDirect.service_type_values).
    find_all {|ds| ds.failed? }
if errors.present? 
    %>
    <div class="borrow-direct-error alert alert-danger" role="alert">
        <p><strong>Warning</strong>, there was a software error in determining
            BorrowDirect availability.</p>

        <%  if timeout = errors.find do |ds| 
                ds.exception_info.try {|h| h[:class_name] == "BorrowDirect::HttpTimeoutError"}
            end %>
            <p class="borrow-direct-error-info">
                <%= timeout.exception_info[:message] %>
            </p>
        <% end %>
    </div>
<% end %>